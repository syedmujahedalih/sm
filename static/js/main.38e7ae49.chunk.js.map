{"version":3,"sources":["img/syed_dp.jpg","components/Navitem.js","components/Navbar.js","components/Social.js","contents/Home.js","contents/About.js","contents/Skills.js","contents/Contact.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Navitem","to","this","props","tolink","item","Component","Navbar","activeitem","x","state","NavItemActive","length","document","getElementById","classList","remove","setState","add","activec","Social","className","href","target","rel","class","Home","src","profilepic","alt","text","speed","eraseDelay","About","Skills","style","color","myskills","map","value","Contact","App","exact","path","Boolean","window","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.38e7ae49.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/syed_dp.2c6383cd.jpg\";","import React, { Component } from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nclass Navitem extends Component {\r\nrender() {\r\nreturn (\r\n<li>\r\n<Link to={this.props.tolink} >\r\n{this.props.item}\r\n</Link>\r\n</li>\r\n)\r\n}\r\n}\r\nexport default Navitem","import React, { Component } from 'react';\r\nimport Navitem from './Navitem';\r\nclass Navbar extends Component {\r\nconstructor(props)\r\n{\r\nsuper(props);\r\nthis.state={\r\n'NavItemActive':''\r\n}\r\n}\r\nactiveitem=(x)=>\r\n{\r\nif(this.state.NavItemActive.length>0){\r\ndocument.getElementById(this.state.NavItemActive).classList.remove('active');\r\n}\r\nthis.setState({'NavItemId':x},()=>{\r\ndocument.getElementById(this.state.NavItemActive).classList.add('active');\r\n});\r\n};\r\nrender() {\r\nreturn (\r\n<nav>\r\n<ul>\r\n<Navitem item=\"Home\" tolink=\"/\"  activec={this.activeitem}></Navitem>\r\n<Navitem item=\"About\" tolink=\"/About\"  activec={this.activeitem}></Navitem>\r\n<Navitem item=\"Resume\" tolink=\"/Skills\"  activec={this.activeitem}></Navitem>\r\n<Navitem item=\"Contact\" tolink=\"/Contact\"  activec={this.activeitem}></Navitem>\r\n</ul>\r\n</nav>\r\n)\r\n}\r\n}\r\nexport default Navbar","import React, { Component } from 'react';\r\n\r\nclass Social extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"social\">\r\n            <a href=\"https://github.com/syedmujahedalih\" target=\"_blank\" rel=\"noopener noreferrer\"><i class=\"fab fa-github\"></i></a>\r\n            <a href=\"https://www.linkedin.com/in/syed-mujahed/\" target=\"_blank\" rel=\"noopener noreferrer\"><i class=\"fab fa-linkedin\"></i></a>\r\n            <a href=\"https://twitter.com/syedmujahed97\" target=\"_blank\" rel=\"noopener noreferrer\"><i class=\"fab fa-twitter\"></i></a>\r\n            <a href=\"https://www.hackerrank.com/syedmujahedalih1\" target=\"_blank\" rel=\"noopener noreferrer\"><i class=\"fab fa-hackerrank\"></i></a>\r\n            </div>\r\n            )\r\n        }\r\n    }\r\n    \r\nexport default Social","import React, { Component } from 'react';\r\nimport ReactTypingEffect from 'react-typing-effect';\r\nimport Social from '../components/Social';\r\nimport profilepic from '../img/syed_dp.jpg';\r\n\r\nclass Home extends Component {\r\n    render() {\r\n    return (\r\n    <div className=\"condiv Home\">\r\n    <img src={profilepic} alt='profilepic' className=\"profilepic\"></img>\r\n    <ReactTypingEffect className=\"typingeffect\" text={['Hey there! I am Mujahed Syed.','I am a graduate student @ Arizona State University.']} \r\n    speed={88} eraseDelay={600}/>\r\n    <Social/>\r\n    </div>\r\n    )\r\n    }\r\n    }\r\n    export default Home","import React, { Component } from 'react';\r\n\r\nclass About extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"condiv\">\r\n            <h1 className=\"subtopic\">About Me</h1>\r\n            <br></br>\r\n            <p>\r\n                Hey there! My name is Mujahed Syed. I'm currently a graduate student at Arizona State University, Tempe. I'm pursuing my MS\r\n                in Computer Engineering (Computer Systems). Prior to joining ASU, I completed my Bachelor of Technology (B.Tech) in Electronics and \r\n                Communication Engineering (ECE) from Manipal University Jaipur, India. During my undergrad I've interned at Deloitte and Ericsson. \r\n                My areas of interest include Data Science and Analytics, Machine Learning and Data Visualization. \r\n                I'm currently in the job hunting phase and I'm open to Software Development, Business Intelligence, Analytics and Data Science related job roles.\r\n            </p>\r\n            </div>\r\n            )\r\n        }\r\n    }\r\n    \r\nexport default About\r\n    ","import React, { Component } from 'react'\r\n\r\nclass Skills extends Component {\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n        this.state={\r\n            'myskills':['Python','SQL','Tableau','Alteryx','Apache Spark','Git','LaTeX','HTML','CSS','ReactJS']\r\n        };\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"condiv skills\">\r\n                <a href=\"https://drive.google.com/file/d/19HuKcbYEaQbrQpn8dwPNnd0EH2_zHsWQ/view?usp=sharing\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n                <h3 className=\"subtopic\" style={{color:\"black\"}}><u>Link to my Detailed Single Page Resume</u></h3></a>\r\n            <h2 className=\"subtopic\">Relevant Skills</h2>\r\n            <ul>\r\n            {this.state.myskills.map((value)=>{\r\n                return <li>{value}</li>\r\n            })}\r\n            </ul>\r\n            </div>\r\n            )\r\n        }\r\n    }\r\n    \r\n    export default Skills","import React, { Component } from 'react';\r\nimport Social from '../components/Social';\r\nclass Contact extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"condiv\">\r\n            <h1 className=\"subtopic\">Contact Me</h1>\r\n            <h3>Email  : msyed10@asu.edu</h3>\r\n            <Social/>\r\n            </div>\r\n            )\r\n        }\r\n    }\r\n    \r\n    export default Contact\r\n    ","import React from 'react';\nimport './App.css';\nimport\n{\nBrowserRouter as Router,\nRoute,\n} from \"react-router-dom\";\nimport Navbar from './components/Navbar';\nimport Home from './contents/Home';\nimport About from './contents/About';\nimport Education from './contents/Education';\nimport Skills from './contents/Skills';\nimport Contact from './contents/Contact';\n\nfunction App() {\n  return (\n    <Router>\n    <div className=\"App\">\n    <Navbar />\n    <Route exact path=\"/\">\n    <Home />\n    </Route>\n    <Route path=\"/about\">\n    <About />\n    </Route>\n    <Route path=\"/education\">\n    <Education />\n    </Route>\n    <Route path=\"/skills\">\n    <Skills />\n    </Route>\n    <Route path=\"/contact\">\n    <Contact />\n    </Route>\n    </div>\n    </Router>\n    );\n  }\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}